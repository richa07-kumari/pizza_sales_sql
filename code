PIZZA SALES ANALYSIS USING SQL:

1:
-- Retrieve the total number of orders placed.
SELECT COUNT(order_id) as total_orders FROM pizzahut.orders;

2:
-- Calculate the total revenue generated from pizza sales.
SELECT 
    ROUND(SUM(od.quantity * p.price), 2) AS total_sales
FROM
    pizzahut.order_details AS od
        JOIN
    pizzahut.pizzas AS p ON od.pizza_id = p.pizza_id;

3:
-- Identify the highest-priced pizza.
SELECT 
    pt.name, p.price
FROM
    pizzahut.pizza_types AS pt
        JOIN
    pizzahut.pizzas AS p ON pt.pizza_type_id = p.pizza_type_id
ORDER BY p.price DESC
LIMIT 1;

4:
-- Identify the most common pizza size ordered.

SELECT p.size, count(od.order_details_id) as order_count
from pizzahut.pizzas as p join pizzahut.order_details as od
on p.pizza_id=od.pizza_id
group by p.size
order by order_count desc;

5:
-- List the top 5 most ordered pizza types along with their quantities.
SELECT 
    pt.name, SUM(od.quantity) AS quantity
FROM
    pizzahut.pizza_types AS pt
        JOIN
    pizzahut.pizzas AS p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    pizzahut.order_details AS od ON od.pizza_id = p.pizza_id
GROUP BY pt.name
ORDER BY quantity DESC
LIMIT 5;

6:
-- Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT 
    pt.category, SUM(od.quantity) AS quantity
FROM
    pizzahut.pizza_types AS pt
        JOIN
    pizzahut.pizzas AS p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    pizzahut.order_details AS od ON od.pizza_id = p.pizza_id
GROUP BY pt.category
ORDER BY quantity DESC;

7:
-- Determine the distribution of orders by hour of the day.

SELECT 
    HOUR(order_time) AS hour, COUNT(order_id) AS order_count
FROM
    pizzahut.orders
GROUP BY HOUR(order_time);

8:
-- Join relevant tables to find the category-wise distribution of pizzas.

select category, count(name) from pizzahut.pizza_types
group by category;

9:
-- Group the orders by date and calculate the average number of pizzas ordered per day.
SELECT 
    ROUND(AVG(quantity), 0) as avg_pizza_per_day
FROM
    (SELECT 
        o.order_date, SUM(od.quantity) AS quantity
    FROM
        pizzahut.orders AS o
    JOIN pizzahut.order_details AS od ON o.order_id = od.order_id
    GROUP BY o.order_date) AS order_quantity;

10:
-- Determine the top 3 most ordered pizza types based on revenue.
SELECT 
    pt.name, SUM(od.quantity * p.price) AS revenue
FROM
    pizzahut.pizza_types AS pt
        JOIN
    pizzahut.pizzas AS p ON p.pizza_type_id = pt.pizza_type_id
        JOIN
    pizzahut.order_details AS od ON od.pizza_id = p.pizza_id
GROUP BY pt.name
ORDER BY revenue DESC
LIMIT 3;

11:
-- Calculate the percentage contribution of each pizza type to total revenue.
SELECT 
    pt.category, round(SUM(od.quantity * p.price)/( SELECT 
    ROUND(SUM(od.quantity * p.price), 2) AS total_sales
FROM
    pizzahut.order_details AS od
        JOIN
    pizzahut.pizzas AS p ON od.pizza_id = p.pizza_id)*100,2) as revenue
    from pizzahut.pizza_types as pt
        JOIN
    pizzahut.pizzas AS p ON p.pizza_type_id = pt.pizza_type_id
        JOIN
    pizzahut.order_details AS od ON od.pizza_id = p.pizza_id
GROUP BY pt.category
ORDER BY revenue DESC;

12:
-- Analyze the cumulative revenue generated over time.
select order_date, sum(revenue)  over(order by order_date) as cum_revenue
from 
(select o.order_date, 
sum(od.quantity*p.price) as revenue
from pizzahut.order_details as od
join pizzahut.pizzas as p
on od.pizza_id=p.pizza_id
join pizzahut.orders as o
 on o.order_id=od.order_id
 group by o.order_date) as sales

